{"version":3,"sources":["components/Emoji.tsx","pages/BitcoinTram.tsx"],"names":["Emoji","props","className","class","role","aria-label","label","aria-hidden","symbol","BTC_TRAM","USE_REDEEMABLE_NFTS","Wrapper","styled","div","RedeemButton","Button","RenderTradePage","onChangeOrderRef","onPrice","onSize","NFT","align","justify","flex","NftCard","nft","setChangeOrderRef","smallScreen","style","paddingTop","UserInfoTable","BitcoinTram","useMarket","marketName","setMarketAddress","useEffect","marketAddress","toBase58","document","title","changeOrderRef","useRef","componentProps","ref","current","useCallback","price","size"],"mappings":"4NAYeA,EAVD,SAACC,GAAD,OACZ,0BACEC,UAAWD,EAAME,MACjBC,KAAK,MACLC,aAAYJ,EAAMK,MAAQL,EAAMK,MAAQ,GACxCC,cAAaN,EAAMK,MAAQ,QAAU,QAEpCL,EAAMO,S,0eCAX,IAAMC,EAAWC,IAAoB,GAE/BC,EAAUC,IAAOC,IAAV,KAUPC,EAAeF,YAAOG,IAAPH,CAAH,KAgDZI,EAAkB,SAAC,GAA2C,IAAzCC,EAAwC,EAAxCA,iBAAkBC,EAAsB,EAAtBA,QAASC,EAAa,EAAbA,OAC9CC,EAAMX,EAEZ,OACE,oCACE,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,EAAD,CAAOD,OAAO,eAAKF,MAAM,OAAOH,MAAM,mBAG1C,kBAAC,IAAD,CAAKkB,MAAM,SAASC,QAAQ,UAC1B,kBAAC,IAAD,CAAKC,KAAK,SACV,kBAAC,IAAD,KACGH,GACC,kBAACI,EAAA,EAAD,CACEC,IAAKL,EACLM,kBAAmBT,EACnBU,aAAa,EACbT,QAASA,EACTC,OAAQA,IAGZ,kBAACL,EAAD,gBAEF,kBAAC,IAAD,CAAKS,KAAK,UAEZ,kBAAC,IAAD,CAAKK,MAAO,CAAEC,WAAY,SACxB,kBAAC,IAAD,CAAKN,KAAK,SACV,kBAAC,IAAD,CAAKA,KAAK,QACR,kBAACO,EAAA,EAAD,OAEF,kBAAC,IAAD,CAAKP,KAAK,YAQHQ,UA3EK,WAAO,IAAD,EACiBC,cAAjCC,EADgB,EAChBA,WAAYC,EADI,EACJA,iBAEpBC,qBAAU,WACRD,EAAiBzB,EAAS2B,cAAcC,cACvC,CAACH,IAEJC,qBAAU,WACRG,SAASC,MAAQN,EAAU,UAAMA,EAAN,mBAA+B,YACzD,CAACA,IAEJ,IAAMO,EAAiBC,mBAIjBC,EAAiB,CACrBzB,iBAAkB,SAAC0B,GAAD,OAAeH,EAAeI,QAAUD,GAC1DzB,QAAS2B,uBACP,SAACC,GAAD,OAAWN,EAAeI,SAAWJ,EAAeI,QAAQ,CAAEE,YAC9D,IAEF3B,OAAQ0B,uBACN,SAACE,GAAD,OAAUP,EAAeI,SAAWJ,EAAeI,QAAQ,CAAEG,WAC7D,KAIJ,OACE,oCACE,kBAACpC,EAAD,KACE,kBAAC,EAAoB+B","file":"static/js/5.3e591e00.chunk.js","sourcesContent":["import React from 'react';\n\nconst Emoji = (props) => (\n  <span\n    className={props.class}\n    role=\"img\"\n    aria-label={props.label ? props.label : ''}\n    aria-hidden={props.label ? 'false' : 'true'}\n  >\n    {props.symbol}\n  </span>\n);\nexport default Emoji;\n","import React, { useCallback, useEffect, useRef } from 'react';\nimport { Col, Row, Button } from 'antd';\nimport styled from 'styled-components';\nimport UserInfoTable from '../components/UserInfoTable';\nimport { useMarket } from '../utils/markets';\nimport { NftCardTrade } from '../components/NftCard';\nimport { USE_REDEEMABLE_NFTS } from '../nfts';\nimport Emoji from '../components/Emoji';\n\nconst BTC_TRAM = USE_REDEEMABLE_NFTS[0];\n\nconst Wrapper = styled.div`\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n  padding: 16px 16px;\n  .borderNone .ant-select-selector {\n    border: none !important;\n  }\n`;\n\nconst RedeemButton = styled(Button)`\n  margin: 20px 0px 0px 0px;\n  background: #f23b69;\n  border-color: #f23b69;\n  &:hover {\n    background: #000;\n    border-color: #000;\n    color: #f23b69;\n    border: solid 2px;\n  }\n`;\n\nconst BitcoinTram = () => {\n  const { marketName, setMarketAddress } = useMarket();\n\n  useEffect(() => {\n    setMarketAddress(BTC_TRAM.marketAddress.toBase58());\n  }, [setMarketAddress]);\n\n  useEffect(() => {\n    document.title = marketName ? `${marketName} â€” Solible` : 'Solible';\n  }, [marketName]);\n\n  const changeOrderRef = useRef<\n    ({ size, price }: { size?: number; price?: number }) => void\n  >();\n\n  const componentProps = {\n    onChangeOrderRef: (ref: any) => (changeOrderRef.current = ref),\n    onPrice: useCallback(\n      (price) => changeOrderRef.current && changeOrderRef.current({ price }),\n      [],\n    ),\n    onSize: useCallback(\n      (size) => changeOrderRef.current && changeOrderRef.current({ size }),\n      [],\n    ),\n  };\n\n  return (\n    <>\n      <Wrapper>\n        <RenderTradePage {...componentProps} />\n      </Wrapper>\n    </>\n  );\n};\n\nconst RenderTradePage = ({ onChangeOrderRef, onPrice, onSize }) => {\n  const NFT = BTC_TRAM;\n\n  return (\n    <>\n      <Row>\n        <Col>\n          <Emoji symbol=\"ðŸ”¥\" label=\"burn\" class=\"emoji-redeem\" />\n        </Col>\n      </Row>\n      <Row align=\"middle\" justify=\"center\">\n        <Col flex=\"auto\" />\n        <Col>\n          {NFT && (\n            <NftCardTrade\n              nft={NFT}\n              setChangeOrderRef={onChangeOrderRef}\n              smallScreen={false}\n              onPrice={onPrice}\n              onSize={onSize}\n            />\n          )}\n          <RedeemButton>Redeem</RedeemButton>\n        </Col>\n        <Col flex=\"auto\" />\n      </Row>\n      <Row style={{ paddingTop: '50px' }}>\n        <Col flex=\"auto\" />\n        <Col flex=\"auto\">\n          <UserInfoTable />\n        </Col>\n        <Col flex=\"auto\" />\n      </Row>\n    </>\n  );\n};\n// TODO: Create redeem button on this pages\n// TODO: Create redeem page that explains everything\n\nexport default BitcoinTram;\n"],"sourceRoot":""}