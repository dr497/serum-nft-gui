{"version":3,"sources":["components/Emoji.tsx","components/RedeemCard.tsx","pages/BitcoinTram.tsx"],"names":["Emoji","props","className","class","role","aria-label","label","aria-hidden","symbol","Paragraph","Typography","RedeemButton","styled","Button","WrappedCard","Card","WrapperParagraph","RedeemCard","nft","disabled","onClick","style","img","maxWidth","parent","display","minHeight","children","margin","div","height","align","justify","src","alt","name","redeemText","flex","block","type","size","paddingRight","BTC_TRAM","USE_REDEEMABLE_NFTS","Wrapper","RenderTradePage","onChangeOrderRef","onPrice","onSize","windowDimensions","useWindowDimensions","walletBalances","useWalletBalancesForAllMarkets","useState","setDisabled","showModal","setShowModal","useEffect","filter","e","mint","mintAddress","toBase58","length","styles","flexWrap","child","paddingLeft","width","paddingBottom","NftCard","setChangeOrderRef","smallScreen","visible","onOk","onCancel","toString","ModalText","paddingTop","href","target","rel","BitcoinTram","useMarket","marketName","setMarketAddress","marketAddress","document","title","changeOrderRef","useRef","componentProps","ref","current","useCallback","price"],"mappings":"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","file":"static/js/4.b30d1aca.chunk.js","sourcesContent":["import React from 'react';\n\nconst Emoji = (props) => (\n  <span\n    className={props.class}\n    role=\"img\"\n    aria-label={props.label ? props.label : ''}\n    aria-hidden={props.label ? 'false' : 'true'}\n  >\n    {props.symbol}\n  </span>\n);\nexport default Emoji;\n","import React from 'react';\nimport { Button, Card, Typography, Row, Col } from 'antd';\nimport styled from 'styled-components';\nimport Emoji from './Emoji';\n\nconst { Paragraph } = Typography;\n\nconst RedeemButton = styled(Button)`\n  width: auto;\n  height: auto;\n  margin: 20px 0px 0px 0px;\n  background: #f23b69;\n  border-color: #f23b69;\n  &:hover {\n    background: #000;\n    border-color: #000;\n    color: #f23b69;\n  }\n`;\n\nconst WrappedCard = styled(Card)`\n  background: linear-gradient(\n    162.92deg,\n    rgb(43, 43, 43) 12.36%,\n    rgb(0, 0, 0) 94.75%\n  );\n  bordercolor: transparent;\n  border-radius: 25px;\n  cursor: pointer;\n  overflow: hidden;\n  width: 50vw;\n  height: 100%;\n`;\n\nconst WrapperParagraph = styled(Paragraph)`\n  padding-top: 20px;\n  font-size: 16px;\n  text-align: center;\n`;\n\nconst RedeemCard = ({ nft, disabled, onClick }) => {\n  const style = {\n    img: {\n      maxWidth: '100%',\n    } as React.CSSProperties,\n    parent: { display: 'flex', minHeight: '100vh' } as React.CSSProperties,\n    children: { margin: 'auto' } as React.CSSProperties,\n    div: {\n      height: '100%',\n    },\n  };\n  return (\n    <div style={style.div}>\n      <WrappedCard>\n        <Row align=\"middle\" justify=\"center\">\n          <div style={style.parent}>\n            <div style={style.children}>\n              <img src={nft.img} alt={nft.name} style={style.img} />\n              <WrapperParagraph>\n                {redeemText}\n                <Emoji symbol=\"✉️\" label=\"burn\" class=\"emoji-redeem\" />\n              </WrapperParagraph>\n              <Row align=\"middle\" justify=\"center\">\n                <Col flex=\"auto\" />\n                <Col>\n                  <RedeemButton\n                    disabled={disabled}\n                    onClick={onClick}\n                    block\n                    type=\"primary\"\n                    size=\"large\"\n                  >\n                    <span style={{ paddingRight: 10 }}>{'Redeem'}</span>{' '}\n                    <Emoji symbol=\"🔥\" label=\"burn\" class=\"emoji-redeem\" />\n                  </RedeemButton>\n                </Col>\n                <Col flex=\"auto\" />\n              </Row>\n            </div>\n          </div>\n          <Col flex=\"auto\" />\n        </Row>\n      </WrappedCard>\n    </div>\n  );\n};\n\nexport default RedeemCard;\n\nconst redeemText = `\nOnce you have bought this NFT you can keep it in your wallet, resell it or redeem it for a physical collectible item and mailed to your door\n`;\n","import React, { useCallback, useEffect, useRef, useState } from 'react';\nimport { Col, Row, Modal } from 'antd';\nimport styled from 'styled-components';\nimport { useMarket } from '../utils/markets';\nimport { NftCardTrade } from '../components/NftCard';\nimport { USE_REDEEMABLE_NFTS } from '../nfts';\nimport RedeemCard from '../components/RedeemCard';\nimport { useWindowDimensions } from '../components/utils';\nimport { useWalletBalancesForAllMarkets } from '../utils/markets';\nimport Emoji from '../components/Emoji';\n\nconst BTC_TRAM = USE_REDEEMABLE_NFTS[0];\n\nconst Wrapper = styled.div`\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n  padding: 16px 16px;\n  .borderNone .ant-select-selector {\n    border: none !important;\n  }\n`;\n\nconst BitcoinTram = () => {\n  const { marketName, setMarketAddress } = useMarket();\n\n  useEffect(() => {\n    setMarketAddress(BTC_TRAM.marketAddress.toBase58());\n  }, [setMarketAddress]);\n\n  useEffect(() => {\n    document.title = marketName ? `${marketName} — Solible` : 'Solible';\n  }, [marketName]);\n\n  const changeOrderRef = useRef<\n    ({ size, price }: { size?: number; price?: number }) => void\n  >();\n\n  const componentProps = {\n    onChangeOrderRef: (ref: any) => (changeOrderRef.current = ref),\n    onPrice: useCallback(\n      (price) => changeOrderRef.current && changeOrderRef.current({ price }),\n      [],\n    ),\n    onSize: useCallback(\n      (size) => changeOrderRef.current && changeOrderRef.current({ size }),\n      [],\n    ),\n  };\n\n  return (\n    <>\n      <Wrapper>\n        <RenderTradePage {...componentProps} />\n      </Wrapper>\n    </>\n  );\n};\n\nconst RenderTradePage = ({ onChangeOrderRef, onPrice, onSize }) => {\n  const windowDimensions = useWindowDimensions();\n  const walletBalances = useWalletBalancesForAllMarkets();\n  const [disabled, setDisabled] = useState(true);\n  const [showModal, setShowModal] = useState(false);\n\n  useEffect(() => {\n    if (walletBalances) {\n      setDisabled(\n        walletBalances.filter((e) => e.mint === BTC_TRAM.mintAddress.toBase58())\n          .length > 0\n          ? false\n          : true,\n      );\n    }\n  }, [walletBalances]);\n\n  const styles = {\n    parent: {\n      display: 'flex',\n      flexWrap: 'wrap',\n    } as React.CSSProperties,\n    child: {\n      flex: 1,\n      paddingRight: 20,\n      paddingLeft: 20,\n    } as React.CSSProperties,\n    img: {\n      width: '100%',\n      paddingBottom: 30,\n    } as React.CSSProperties,\n  };\n\n  const onClick = () => {\n    setShowModal(true);\n  };\n\n  if (!BTC_TRAM) {\n    return null;\n  }\n\n  return (\n    <>\n      {windowDimensions.width > 1210 && (\n        <div style={styles.parent}>\n          <>\n            <div style={styles.child}>\n              <RedeemCard\n                nft={BTC_TRAM}\n                disabled={disabled}\n                onClick={onClick}\n              />\n            </div>\n            <div style={styles.child}>\n              <NftCardTrade\n                nft={BTC_TRAM}\n                setChangeOrderRef={onChangeOrderRef}\n                smallScreen={false}\n                onPrice={onPrice}\n                onSize={onSize}\n              />\n            </div>\n            <Modal\n              visible={showModal}\n              onOk={() => setShowModal(false)}\n              onCancel={() => setShowModal(false)}\n              width=\"50%\"\n            >\n              {<ModalText />}\n            </Modal>\n          </>\n        </div>\n      )}\n      {windowDimensions.width < 1210 && (\n        <>\n          <Row align=\"middle\" justify=\"center\">\n            <Col flex=\"auto\" />\n            <Col>\n              <img\n                src={BTC_TRAM.img.toString()}\n                alt={BTC_TRAM.name}\n                style={styles.img}\n              />\n            </Col>\n            <Col flex=\"auto\" />\n          </Row>\n          <Row align=\"middle\" justify=\"center\">\n            <Col flex=\"auto\" />\n            <Col>\n              <NftCardTrade\n                nft={BTC_TRAM}\n                setChangeOrderRef={onChangeOrderRef}\n                smallScreen={false}\n                onPrice={onPrice}\n                onSize={onSize}\n              />\n            </Col>\n            <Col flex=\"auto\" />\n          </Row>\n        </>\n      )}\n    </>\n  );\n};\n\nconst ModalText = () => {\n  return (\n    <>\n      To redeem your NFT:\n      <ul>\n        <li style={{ paddingTop: 15 }}>\n          Send the NFT to the following address{' '}\n          <a\n            href=\"https://explorer.solana.com/address/8uKHDXE1hosqSYEp3wbjzvWPnoZF1GNmLeVwYXgLaoAX\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            8uKHDXE1hosqSYEp3wbjzvWPnoZF1GNmLeVwYXgLaoAX\n          </a>{' '}\n        </li>\n        <li>\n          Then email <a href=\"mailto:redeem@solible.com\">redeem@solible.com</a>{' '}\n          with the transaction ID and your shipping information.\n        </li>\n      </ul>\n      <div>\n        <Emoji symbol=\"🔥\" label=\"burn\" class=\"emoji-redeem\" /> Your NFT will be\n        redeemed and shipped within 48 hours\n      </div>\n      <div>\n        <Emoji symbol=\"🚫\" label=\"warning\" class=\"emoji-redeem\" /> NFTs sent\n        without an email will be returned to the sender after 72 hours\n      </div>\n    </>\n  );\n};\n\nexport default BitcoinTram;\n"],"sourceRoot":""}